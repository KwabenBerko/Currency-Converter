[versions]
androidGradlePlugin = "8.0.2"
activityCompose = "1.6.1"
navigationCompose = "2.5.3"
viewModelCompose = "2.6.0-alpha04"
compose = "1.4.0-alpha04"
compose-compiler = "1.4.0"
compose-material3 = "1.1.0-alpha03"
accompanist = "0.29.1-alpha"
workmanager = "2.7.1"
catalogUpdate = "0.7.0"
coroutines = "1.6.4"
icu4j = "72.1"
junit = "4.13.2"
kotest = "5.5.4"
kotlin = "1.8.0"
ksp = "1.8.0-1.0.8"
kotlinxCollections = "0.3.5"
kotlinxDateTime = "0.4.0"
ktlint = "11.0.0"
ktor = "2.2.2"
lifeCycleVersion = "2.6.0-alpha03"
multiplatformSettings = "1.0.0-alpha01"
kmmViewModel = "1.0.0-ALPHA-3"
nativeCoroutines = "0.13.3"
sqldelight = "2.0.0-alpha05"
turbine = "0.12.1"
versions = "0.44.0"

[libraries]
activityCompose = { module = "androidx.activity:activity-compose", version.ref = "activityCompose" }
navigationCompose = { module = "androidx.navigation:navigation-compose", version.ref = "navigationCompose" }
viewModelCompose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "viewModelCompose" }
viewModelKtx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "viewModelCompose" }
compose-ui-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-material = { module = "androidx.compose.material3:material3", version.ref = "compose-material3" }
accompanist-systemuiController = { module = "com.google.accompanist:accompanist-systemuicontroller", version.ref = "accompanist" }
accompanist-navigationAnimation = { module = "com.google.accompanist:accompanist-navigation-animation", version.ref = "accompanist" }
workmanager = { module = "androidx.work:work-runtime-ktx", version.ref = "workmanager" }
coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
icu4j = { module = "com.ibm.icu:icu4j", version.ref = "icu4j" }
junit = { module = "junit:junit", version.ref = "junit" }
kotest-assertions-core = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotlinx-collections = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version.ref = "kotlinxCollections" }
kotlinx-dateTime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDateTime" }
ktor-client-android = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
ktor-client-contentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }
ktor-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
lifecycle-common-java8 = { module = "androidx.lifecycle:lifecycle-common-java8", version.ref = "lifeCycleVersion" }
lifecycle-viewModel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifeCycleVersion" }
kmmViewModel = {module = "com.rickclephas.kmm:kmm-viewmodel-core", version.ref = "kmmViewModel"}
multiplatformSettings = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatformSettings" }
multiplatformSettings-coroutines = { module = "com.russhwolf:multiplatform-settings-coroutines", version.ref = "multiplatformSettings" }
multiplatformSettings-test = { module = "com.russhwolf:multiplatform-settings-test", version.ref = "multiplatformSettings" }
sqldelight-coroutines-extensions = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqldelight" }
sqldelight-driver-android = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight" }
sqldelight-driver-native = { module = "app.cash.sqldelight:native-driver", version.ref = "sqldelight" }
sqldelight-driver-sqlite = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqldelight" }
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }

[bundles]
ktor-client = [
    "ktor-client-contentNegotiation",
    "ktor-client-core",
    "ktor-client-logging",
]
lifecycle = [
    "lifecycle-common-java8",
    "lifecycle-viewModel-ktx",
]

[plugins]
android-application = { id = "com.android.application", version.ref = "androidGradlePlugin" }
android-library = { id = "com.android.library", version.ref = "androidGradlePlugin" }
catalogUpdate = { id = "nl.littlerobots.version-catalog-update", version.ref = "catalogUpdate" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-gradlePlugin = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
ksp = {id = "com.google.devtools.ksp", version.ref = "ksp"}
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint" }
nativeCoroutines = { id = "com.rickclephas.kmp.nativecoroutines", version.ref = "nativeCoroutines" }
sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }
versions = { id = "com.github.ben-manes.versions", version.ref = "versions" }
